//// Sth less mixins.
//// Created by: Krzysztof Węgliński
//// Company: Sth
//// Author URL: http://csth.pl
//// project available at:
//// http://git.csth.pl/sth/sth-lessmixins
//// License: BSD license.
//// April 2015.
// settings
// mixins

.text-center {
    text-align: center;
}

.text-left {
    text-align: left;
}

.text-right {
    text-align: right;
}

// ex
// 	.rem(38);
//	.padding: @rem;

.rem(@px) {
    @calc: (@px / @font-size-base);
    @rem: ~"@{calc}rem";
}

// ex. font-size(38);
.font-size(@px, @lh: 1.4) {
    @font-size: (@px / @font-size-base);
    font-size: ~"@{font-size}rem";
    line-height: @lh;
}

//ex. dims(120px, 40px);
.dims(@wh, @hh) {
    width: @wh;
    height: @hh;
}

//ex. rem-dims(120, 40);
.dims-rem(@wh, @hh) {
    @width: (@wh / @font-size-base);
    @height: (@hh / @font-size-base);
    width: ~"@{width}rem";
    height: ~"@{height}rem";
}

.width(@wh: 0) {
    @width: (@wh / @font-size-base);
    width: ~"@{width}rem";
}

.height(@hh: 0) {
    @height: (@hh / @font-size-base);
    height: ~"@{height}rem";
}

.left(@lh: 0) {
    @left: (@lh / @font-size-base);
    left: ~"@{left}rem";
}

.right(@rh: 0) {
    @right: (@rh / @font-size-base);
    right: ~"@{right}rem";
}

.top(@th: 0) {
    @top: (@th / @font-size-base);
    top: ~"@{top}rem";
}

.bottom(@bh: 0) {
    @bottom: (@bh / @font-size-base);
    bottom: ~"@{bottom}rem";
}

.min-width(@mwh: 0) {
    @min-width: (@mwh / @font-size-base);
    min-width: ~"@{min-width}rem";
}

.min-height(@mhh: 0) {
    @min-height: (@mhh / @font-size-base);
    min-height: ~"@{min-height}rem";
}

.max-width(@mxwh: 0) {
    @max-width: (@mxwh / @font-size-base);
    max-width: ~"@{max-width}rem";
}

.max-height(@mxhh: 0) {
    @max-height: (@mxhh / @font-size-base);
    max-height: ~"@{max-height}rem";
}

//ex .marg(51, 20, 46, 20);
.marg(@mt: 0; @mr: 0; @mb: 0; @ml: 0; @im: ''; ) {
    @mtv: (@mt / @font-size-base);
    @mrv: (@mr / @font-size-base);
    @mbv: (@mb / @font-size-base);
    @mlv: (@ml / @font-size-base);
    margin: ~"@{mtv}rem" ~"@{mrv}rem" ~"@{mbv}rem" ~"@{mlv}rem";
}

.marg-auto(@mt: 0; @mb: 0; @im: ''; ) {
    @mtv: (@mt / @font-size-base);
    @mbv: (@mb / @font-size-base);
    margin: ~"@{mtv}rem" ~"auto" ~"@{mbv}rem";
}

//ex .padd(51, 20, 46, 20);
.padd(@pt: 0; @pr: 0; @pb: 0; @pl: 0; ) {
    @ptv: (@pt / @font-size-base);
    @prv: (@pr / @font-size-base);
    @pbv: (@pb / @font-size-base);
    @plv: (@pl / @font-size-base);
    padding: ~"@{ptv}rem" ~"@{prv}rem" ~"@{pbv}rem" ~"@{plv}rem";
}

.padd-top(@pt: 0) {
    @ptv: (@pt / @font-size-base);
    padding-top: ~"@{ptv}rem";
}

.padd-bottom(@pb: 0) {
    @pbv: (@pb / @font-size-base);
    padding-bottom: ~"@{pbv}rem";
}

.padd-left(@pl: 0) {
    @plv: (@pl / @font-size-base);
    padding-left: ~"@{plv}rem";
}

.padd-right(@pr: 0) {
    @prv: (@pr / @font-size-base);
    padding-right: ~"@{prv}rem";
}

/// ex. .rad-border(#0f0f0f, 1px, solid, 6px, 6px, 2px, 2px);
.rad-border(@color: #000; @weight: 1; @type: solid; @t: 0; @r: 0; @b: 0; @l: 0; ) {
    border: @weight @type @color;
    border-radius: @t @r @b @l;
}

.border-radius (@radius: 5px) {
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    border-radius: @radius;
    -moz-background-clip: padding;
    -webkit-background-clip: padding-box;
    background-clip: padding-box;
}

// gradients
.gradient (@startColor: #eee, @endColor: white) {
    background-color: @startColor;
    background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
    background: -webkit-linear-gradient(top, @startColor, @endColor);
    background: -moz-linear-gradient(top, @startColor, @endColor);
    background: -ms-linear-gradient(top, @startColor, @endColor);
    background: -o-linear-gradient(top, @startColor, @endColor);
}

// box-shadow
.box-shadow(@props) {
    -webkit-box-shadow: @props;
    -moz-box-shadow: @props;
    -o-box-shadow: @props;
    box-shadow: @props;
}

.clearfix {
    zoom: 1;

    &:before,
    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}

.base-after(@wh, @hh, @cont, @pos) {
    width: @wh;
    height: @hh;
    content: @cont;
    position: @pos;
}

.background-position(@bg-hor, @bg-ver) {
    background-position: ~"@{horizontal}rem" ~"@{vertical}rem";
    @horizontal: (@bg-hor / @font-size-base);
    @vertical: (@bg-ver / @font-size-base);
}

.background-size(@val) {
    -webkit-background-size: @val;
    -moz-background-size: @val;
    -o-background-size: @val;
    background-size: @val;
}

.clearfix:after {
    content: "";
    display: table;
    clear: both;
}

.transition (@transition) {
    -webkit-transition: @transition;
    -moz-transition: @transition;
    -ms-transition: @transition;
    -o-transition: @transition;
}

.fixed(@top: 0px, @left: 0px, @index: 0, @wh: 100%, @hh: 100px) {
    z-index: @index;
    position: fixed;
    top: @top;
    left: @left;
    width: @wh;
    height: @hh;
}

.filter(@val) {
    filter:@val;
    -webkit-filter: @val;
    -moz-filter: @val;
    -ms-filter: @val;
    -o-filter: @val;
}

.opacity(@opacity) {
    opacity: @opacity;

    // IE8 filter
    @opacity-ie: (@opacity * 100);
    filter:~"alpha(opacity=@{opacity-ie})";
}
